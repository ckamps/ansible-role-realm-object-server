---

- name: Create Realm OS group
  group:
    name: "{{ realm_os_group }}"
    gid: "{{ realm_os_group_id }}"

- name: Create Realm OS user
  user:
    name: "{{ realm_os_user }}"
    comment: Realm OS
    uid: "{{ realm_os_user_id }}"
    group: "{{ realm_os_group }}"

- name: Install Realm
  npm:
    name: realm-object-server
    path: "{{ realm_home }}"
    state: present
  become: yes
  become_user: "{{ realm_os_user }}"

# On Amazon Linux 2 Docker instance, the expect module fails due to:
# OSError: out of pty devices
# As a workaround, enable non-root users to access the virtual device.
# See following references for somewhat related background:
#   http://adam8157.info/blog/2017/08/fix-out-of-pty-devices/
#   https://github.com/rkt/rkt/issues/3252
#
- name: Apply tty workaround on Amazon Linux 2 Docker
  file:
    path: /dev/pts/ptmx
    mode: 0666
  when: ansible_virtualization_type == "docker" and ansible_distribution == "Amazon"

- name: Initialize Realm
  expect: 
    command: "{{ realm_home }}/node_modules/.bin/ros init {{ realm_instance_name }}"
    responses:
       Agree with your email: "{{ realm_license_email }}"
       Would you like to receive: "N"
    timeout: 1200
  args:
    creates: "{{ realm_home }}/{{ realm_instance_name }}"
    chdir: "{{ realm_home }}"
  become: yes
  become_user: "{{ realm_os_user }}"

- name: Install AWS Cognito mobile user management
  npm:
    name: realm-object-server-cognito-auth
    path: "{{ realm_home }}/{{ realm_instance_name }}"
    state: present
  become: yes
  become_user: "{{ realm_os_user }}"

- name: Configure Realm service
  template:
    src: templates/index.ts.j2
    dest: "{{ realm_home }}/{{ realm_instance_name }}/src/index.ts"
    owner: "{{ realm_os_user }}"
    group: "{{ realm_os_group }}"
    mode: 0644

- name: Configure Realm Startup Script
  template:
    src: templates/start.sh.j2
    dest: "{{ realm_home }}/{{ realm_instance_name }}/start.sh"
    owner: "{{ realm_os_user }}"
    group: "{{ realm_os_group }}"
    mode: 0744

- name: Configure Realm system service
  template:
    src: templates/ros.service.j2
    dest: /lib/systemd/system/ros.service
    owner: root
    group: root
    mode: 0664

- name: Enable and Start Realm OS service
  systemd:
    name: ros
    enabled: true
    state: started
    daemon_reload: yes

- name: Wait for startup
  wait_for:
    port: 9080
    state: started

#
# ros backup -f FAST-ROS-Production -t ./ROS-Backups
# 
# Enable disk volume growth:
# lsblk
# sudo growpart /dev/xvda 1
# lsblk
# sudo yum install xfsprogs
# sudo xfs_growfs -d /dev/xvda1
